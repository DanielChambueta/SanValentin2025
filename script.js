document.addEventListener('DOMContentLoaded', () => {
  const background = document.getElementById('background');
  const totalElements = 30; // N칰mero total de elementos (flores y corazones)
  const messageContainer = document.getElementById('message-container'); // Asegurarse de declarar esta variable
  const messageHeader = document.querySelector('#message-container h1');
  const yesButton = document.getElementById('yes');
  const noButton = document.getElementById('no');

  // Variable para controlar la escala del bot칩n NO
  let noButtonScale = 1; // Tama침o original

  // Array con 27 frases (7 dadas + 20 adicionales)
  const noPhrases = [
    "Segura?",
    "Tal vez te equivocaste",
    "Insisto, dime que si",
    "No le des m치s al no",
    "No me amas?",
    "Esto no es divertido",
    "Oye, dale al siiiiiii",
    "Jmmm",
    "De nuevo",
    "Est치s segura?",
    "游땩",
    "Puedo estar aqu칤 todo el d칤a",
    "NONONONONONONONON",
    "Dale al s칤 y te llevaras una sorpresa amor",
    "游눖",
    "Di que siiiiii",
    "Nop, intenta de nuevo",
    "Insisto, solo un s칤",
    "No me dejes en visto",
    "Aceptaaaaa",
    "Sigo esperando",
    "游땜",
    "Acepta, y ven a mi jajajajja",
    "No, en serio, di s칤",
    "Conf칤a en m칤, acepta",
    "No lo pienses m치s",
    "Flores para que digas que si 游꺛",
    "No quieres saber que sorpresa te tengo",
    "游땚 SI?",
  ];

  // Funci칩n auxiliar para obtener un n칰mero aleatorio entre min y max
  function random(min, max) {
    return Math.random() * (max - min) + min;
  }

  // Funci칩n para crear una rosa mejorada
  function createRose() {
    const rose = document.createElement('div');
    rose.classList.add('flower', 'rose');
    const numPetals = 8;
    for (let i = 0; i < numPetals; i++) {
      const petal = document.createElement('div');
      petal.classList.add('petal');
      // Posicionamos cada p칠talo en el centro del contenedor
      petal.style.left = '50%';
      petal.style.top = '50%';
      const angle = i * (360 / numPetals);
      petal.style.transform = `translate(-50%, -100%) rotate(${angle}deg)`;
      rose.appendChild(petal);
    }
    const center = document.createElement('div');
    center.classList.add('center');
    rose.appendChild(center);
    return rose;
  }

  // Funci칩n para crear una margarita (daisy) mejorada
  function createDaisy() {
    const daisy = document.createElement('div');
    daisy.classList.add('flower', 'daisy');
    const numPetals = 10;
    for (let i = 0; i < numPetals; i++) {
      const petal = document.createElement('div');
      petal.classList.add('petal');
      petal.style.left = '50%';
      petal.style.top = '50%';
      const angle = i * (360 / numPetals);
      petal.style.transform = `translate(-50%, -100%) rotate(${angle}deg)`;
      daisy.appendChild(petal);
    }
    const center = document.createElement('div');
    center.classList.add('center');
    daisy.appendChild(center);
    return daisy;
  }

  // Funci칩n para crear un coraz칩n (heart)
  function createHeart() {
    const heart = document.createElement('div');
    heart.classList.add('flower', 'heart');
    return heart;
  }

  // Funci칩n que selecciona aleatoriamente un tipo de elemento
  function createRandomFlower() {
    const flowerTypes = ['rose', 'heart', 'daisy'];
    const type = flowerTypes[Math.floor(Math.random() * flowerTypes.length)];
    if (type === 'rose') {
      return createRose();
    } else if (type === 'heart') {
      return createHeart();
    } else {
      return createDaisy();
    }
  }

  // Crear y animar los elementos de fondo (flores y corazones)
  for (let i = 0; i < totalElements; i++) {
    const elementWrapper = document.createElement('div');
    elementWrapper.classList.add('flower-wrapper');
    // Posici칩n aleatoria en la pantalla
    elementWrapper.style.left = random(0, 100) + '%';
    elementWrapper.style.top = random(0, 100) + '%';
    // Duraci칩n de animaci칩n aleatoria (entre 5 y 15 segundos)
    const duration = random(5, 15);
    elementWrapper.style.animationDuration = duration + 's';
    // Escala aleatoria para dar variedad
    const scale = random(0.5, 1.5);
    elementWrapper.style.transform = `scale(${scale})`;
    // Crear el elemento aleatorio y agregarlo al wrapper
    const element = createRandomFlower();
    elementWrapper.appendChild(element);
    background.appendChild(elementWrapper);
  }

  // Evento para el bot칩n YES (mantiene su comportamiento)
  yesButton.addEventListener('click', () => {
    alert('춰Qu칠 alegr칤a! Prepar칠monos para un San Valent칤n inolvidable.');
  });

  // Evento para el bot칩n NO: cambia el texto, mueve el bot칩n dentro del mensaje y lo hace m치s peque침o
  noButton.addEventListener('click', (e) => {
    e.preventDefault();
    
    // Seleccionar una frase aleatoria
    const randomPhrase = noPhrases[Math.floor(Math.random() * noPhrases.length)];
    messageHeader.textContent = randomPhrase;
  
    // Obtener las dimensiones y posici칩n del contenedor del mensaje
    const containerRect = messageContainer.getBoundingClientRect();
    const btnWidth = noButton.offsetWidth;
    const btnHeight = noButton.offsetHeight;
  
    // Definir los l칤mites para que el bot칩n NO se mueva dentro del mensaje
    const minX = 10; // Margen izquierdo m칤nimo
    const maxX = containerRect.width - btnWidth - 10; // Evitar que el bot칩n salga del lado derecho
    const minY = 50; // Margen superior dentro del contenedor
    const maxY = containerRect.height - btnHeight - 20; // Evitar que el bot칩n salga por abajo
  
    // Generar nueva posici칩n dentro de los l칤mites calculados
    const newX = Math.random() * (maxX - minX) + minX;
    const newY = Math.random() * (maxY - minY) + minY;
  
    // Mover el bot칩n dentro del mensaje
    noButton.style.position = "absolute"; // Se mantiene dentro del contenedor
    noButton.style.left = `${newX}px`;
    noButton.style.top = `${newY}px`;
    
    // Reducir el tama침o del bot칩n en un 10% cada vez, hasta un m칤nimo de escala 0.5
    noButtonScale = Math.max(0.5, noButtonScale * 0.9);
    noButton.style.transform = `scale(${noButtonScale})`;
  });
});
